Title - Data Pusher
*******************

- Create express web app 
- receive some data for an account
- send it across different platforms or destinations from that particular account using WebHook URL's


Task
----
Account Module
    - email id (Mandatory field & unique) -> ✅
    - account id (unique to each account) -> ✅
    - account name (Mandatory field) -> ✅
    - App secret token (automatically generated) -> ✅
    - Website (optional) -> ✅

Destination Module
    - destination belongs to an account -> ✅
    - An account can have multiple destinations -> ✅
    - A destination has URL (mandatory field) -> ✅
    - HTTP method (mandatory field) -> ✅
    - headers (mandatory field & have multiple values) -> ✅

Data handler Module
    - It receives only JSON data in the POST method -> ✅
    - should have an app secret token sent through the header (header key is CL-X-TOKEN) -> ✅
    - Based on the secret token, the account should be identified -> ✅
    - Use any Nodejs http client to send the data across different available destinations (use the url, http method and headers) for that particular account.  -> ✅
    - If the destination’s HTTP method is get, then the incoming JSON data should be sent as a query parameter -> ✅
    -  If the method is post or put, send the data as it is (JSON) -> ✅


Process
    -  Create a Express web application -> ✅
    - Create JSON rest APIs 
        a. CRED operations for an Account -> ✅
        b. CRED operations for Destinations. -> ✅
    - Note: An account can have multiple destinations. For example, if an account is deleted, the destinations for that account should also be deleted. -> ✅
    - Create a URL to get destinations available for the account when the account id is given as input -> ✅
    - Create an API for receiving the data.
        a. The API path is /server/incoming_data. The data should be received through the post method in the JSON format only. -> ✅
        b. The app secret token should be received while receiving the data -> ✅
        c. If the HTTP method is GET and the data is not JSON while receiving the data, send a response as “Invalid Data” in JSON format -> ✅
        d. If the secret key is not received then send a response as “Un Authenticate” in JSON format. -> ✅
        e. After receiving the valid data, using the app secret token, identify the account and send the data to its destinations. -> ✅


Instructions: 
-------------
1. Write the code in the latest version of Nodejs Express web application. -> ✅
2. Use sqlite database. -> ✅
3. Upload the code to Github in a Public repository and give collaborator access to id: vishnuixm 
4. Attach the sample APIs as files in the same Github repo. 
5. Reply to this email with the Github link.




